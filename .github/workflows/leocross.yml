name: LeoCross Ticket

on:
  workflow_dispatch: {}              # run manually
  schedule:                          # run near 4:10pm ET on weekdays
    - cron: '10 20 * * 1-5'          # 20:10 UTC ≈ 4:10pm ET (DST)
    - cron: '10 21 * * 1-5'          # 21:10 UTC ≈ 4:10pm ET (Standard Time)

jobs:
  leocross:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Acquire GammaWizard JWT (login) or fall back to GW_TOKEN
        id: jwtauth
        env:
          GW_EMAIL:    ${{ secrets.GW_EMAIL }}
          GW_PASSWORD: ${{ secrets.GW_PASSWORD }}
          GW_TOKEN_S:  ${{ secrets.GW_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          TOK=""
          if [[ -n "${GW_EMAIL:-}" && -n "${GW_PASSWORD:-}" ]]; then
            # Fetch a fresh 7-day token via API login
            TOK=$(python - <<'PY'
import os, sys, json, requests
email=os.environ.get("GW_EMAIL"); pw=os.environ.get("GW_PASSWORD")
r=requests.post(
    "https://gandalf.gammawizard.com/goauth/authenticateFireUser",
    data={"email": email, "password": pw}, timeout=15
)
r.raise_for_status()
obj=r.json()
tok=obj.get("token","")
if not tok:
    print("NO_TOKEN")  # detected below
else:
    print(tok)
PY
)
            if [[ "$TOK" == "NO_TOKEN" || -z "$TOK" ]]; then
              echo "Login returned no token; will try GW_TOKEN secret (if present)."
              TOK=""
            fi
          fi

          # Fallback to a pre-supplied JWT secret if login unavailable
          if [[ -z "$TOK" && -n "${GW_TOKEN_S:-}" ]]; then
            TOK="$GW_TOKEN_S"
          fi

          if [[ -z "$TOK" ]]; then
            echo "ERROR: Provide GW_EMAIL + GW_PASSWORD secrets, or GW_TOKEN." >&2
            exit 1
          fi

          # Mask and export for later steps
          echo "::add-mask::$TOK"
          echo "GW_TOKEN=$TOK" >> "$GITHUB_ENV"
          echo "source=$( [[ -n "${GW_EMAIL:-}" && -n "${GW_PASSWORD:-}" ]] && echo login || echo secret )" >> "$GITHUB_OUTPUT"

      - name: Run leocross_ticket.py
        env:
          GW_TOKEN: ${{ env.GW_TOKEN }}
        run: |
          python leocross_ticket.py | tee ticket_output.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: leocross-ticket-${{ github.run_id }}
          path: ticket_output.txt

      - name: Summary
        run: |
          {
            echo "### LeoCross ticket"
            echo
            echo '```text'
            cat ticket_output.txt
            echo '```'
          } >> "$GITHUB_STEP_SUMMARY"
