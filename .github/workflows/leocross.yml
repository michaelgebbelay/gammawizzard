name: Place LeoCross (Simple LIVE Ladder)

on:
  workflow_dispatch:
    inputs:
      mode:
        description: 'PLACER_MODE: NOW | SCHEDULED | OFF'
        required: false
        default: 'OFF'
      qty:
        description: 'QTY_OVERRIDE (leave blank to auto-size)'
        required: false
        default: ''
      ladder_sec:
        description: 'Seconds between price steps'
        required: false
        default: '30'
      max_steps:
        description: 'Max price steps (including first)'
        required: false
        default: '50'
      credit_start:
        description: 'Start credit (e.g., 2.10)'
        required: false
        default: ''
      debit_start:
        description: 'Start debit (e.g., 1.90)'
        required: false
        default: ''
      credit_floor:
        description: 'Credit floor (min credit you’ll accept)'
        required: false
        default: ''
      debit_ceil:
        description: 'Debit ceiling (max debit you’ll pay)'
        required: false
        default: ''
      size_source:
        description: 'Sizing: CASH | OBP | BP_MIN | BP_MAX'
        required: false
        default: 'CASH'
      per_unit:
        description: 'Dollars per contract (default 5000)'
        required: false
        default: '5000'
      cash_reserve:
        description: 'Subtract this from size base before dividing'
        required: false
        default: '0'
  schedule:
    # 4:10pm ET across DST (runs both; script enforces window in SCHEDULED mode)
    - cron: "10 20 * * 1-5"  # 4:10pm EDT
    - cron: "10 21 * * 1-5"  # 4:10pm EST

concurrency:
  group: leocross-simple
  cancel-in-progress: true

jobs:
  place:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install --quiet schwab-py requests google-api-python-client google-auth google-auth-httplib2

      - name: Place SPXW order (LIVE ladder)
        env:
          # --- Schwab (REQUIRED secrets)
          SCHWAB_APP_KEY: ${{ secrets.SCHWAB_APP_KEY }}
          SCHWAB_APP_SECRET: ${{ secrets.SCHWAB_APP_SECRET }}
          SCHWAB_TOKEN_JSON: ${{ secrets.SCHWAB_TOKEN_JSON }}

          # --- Google Sheets (REQUIRED secrets)
          GSHEET_ID: ${{ secrets.GSHEET_ID }}
          GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
          SHEET_TAB: schwab

          # --- GammaWizard (token OR email/password; both recommended)
          GW_TOKEN:    ${{ secrets.GW_TOKEN }}
          GW_EMAIL:    ${{ secrets.GW_EMAIL }}
          GW_PASSWORD: ${{ secrets.GW_PASSWORD }}
          GW_FORCE_LOGIN: ${{ vars.GW_FORCE_LOGIN }}
          GW_TIMEOUT: ${{ vars.GW_TIMEOUT }}

          # --- Mode selection (dispatch input > repo variable > default)
          PLACER_MODE: ${{ github.event.inputs.mode != '' && github.event.inputs.mode || (vars.PLACER_MODE != '' && vars.PLACER_MODE || 'SCHEDULED') }}

          # --- Sizing (CASH by default → 1 lot per $5k of cash)
          SIZE_SOURCE:  ${{ github.event.inputs.size_source != '' && github.event.inputs.size_source || (vars.SIZE_SOURCE != '' && vars.SIZE_SOURCE || 'CASH') }}
          PER_UNIT:     ${{ github.event.inputs.per_unit != '' && github.event.inputs.per_unit || (vars.PER_UNIT != '' && vars.PER_UNIT || 5000) }}
          CASH_RESERVE: ${{ github.event.inputs.cash_reserve != '' && github.event.inputs.cash_reserve || (vars.CASH_RESERVE != '' && vars.CASH_RESERVE || 0) }}
          QTY_OVERRIDE: ${{ github.event.inputs.qty }}
          OPT_BP_OVERRIDE: ${{ vars.OPT_BP_OVERRIDE }}

          # --- Ladder pacing (dispatch input > repo variable > script defaults)
          LADDER_SEC:   ${{ github.event.inputs.ladder_sec != '' && github.event.inputs.ladder_sec || (vars.LADDER_SEC != '' && vars.LADDER_SEC || 30) }}
          MAX_STEPS:    ${{ github.event.inputs.max_steps != '' && github.event.inputs.max_steps || (vars.MAX_STEPS != '' && vars.MAX_STEPS || 50) }}

          # --- Price rails (optional)
          CREDIT_START: ${{ github.event.inputs.credit_start != '' && github.event.inputs.credit_start || vars.CREDIT_START }}
          DEBIT_START:  ${{ github.event.inputs.debit_start  != '' && github.event.inputs.debit_start  || vars.DEBIT_START }}
          CREDIT_FLOOR: ${{ github.event.inputs.credit_floor != '' && github.event.inputs.credit_floor || vars.CREDIT_FLOOR }}
          DEBIT_CEIL:   ${{ github.event.inputs.debit_ceil   != '' && github.event.inputs.debit_ceil   || vars.DEBIT_CEIL }}

          PYTHONUNBUFFERED: "1"
        run: |
          python scripts/leocross_place_simple.py
          
