name: LeoCross Ticket

on:
  workflow_dispatch: {}   # run manually from the Actions tab

jobs:
  leocross:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps (requests + Google Sheets client)
        run: |
          python -m pip install --upgrade pip
          pip install --quiet requests google-api-python-client google-auth google-auth-httplib2

      - name: Check required secrets
        env:
          GW_TOKEN: ${{ secrets.GW_TOKEN }}
          GSHEET_ID: ${{ secrets.GSHEET_ID }}
          GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
        run: |
          set -e
          [ -n "${GW_TOKEN}" ] || { echo "GW_TOKEN is EMPTY"; exit 1; }
          [ -n "${GSHEET_ID}" ] || { echo "GSHEET_ID is EMPTY"; exit 1; }
          [ -n "${GOOGLE_SERVICE_ACCOUNT_JSON}" ] || { echo "GOOGLE_SERVICE_ACCOUNT_JSON is EMPTY"; exit 1; }
          echo "All required secrets are set."

      - name: Locate leocross_ticket.py
        id: findscript
        run: |
          set -e
          SCRIPT_PATH="$(git ls-files | grep -E '(^|/)leocross_ticket\.py$' | head -n 1 || true)"
          if [ -z "$SCRIPT_PATH" ]; then
            echo "Could not find leocross_ticket.py in repo." >&2
            echo "Searched files:"; git ls-files | sed -n '1,200p'
            exit 1
          fi
          echo "Found script at: $SCRIPT_PATH"
          echo "script=$SCRIPT_PATH" >> "$GITHUB_OUTPUT"

      - name: Test LeoCross endpoint with token
        env:
          GW_TOKEN: ${{ secrets.GW_TOKEN }}
        run: |
          set -e
          URL="https://gandalf.gammawizard.com/rapi/GetLeoCross"
          echo "GET $URL"
          HTTP_CODE=$(curl -sS -o resp.json -w "%{http_code}" -H "Authorization: Bearer $GW_TOKEN" || echo "curl_failed")
          echo "HTTP: $HTTP_CODE"
          echo "Body (first 400 bytes):"
          head -c 400 resp.json || true
          echo
          if [ "$HTTP_CODE" != "200" ]; then
            echo "Non-200 from LeoCross. Token may be expired or invalid." >&2
            exit 1
          fi
          grep -q '"Trade"' resp.json || { echo "Response missing 'Trade' key"; exit 1; }

      - name: Run leocross_ticket.py
        env:
          GW_TOKEN: ${{ secrets.GW_TOKEN }}
        run: |
          set -e
          python "${{ steps.findscript.outputs.script }}" | tee ticket_output.txt

      - name: Append to Google Sheet (leocross)
        if: success()
        env:
          GSHEET_ID: ${{ secrets.GSHEET_ID }}
          GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_ACTOR: ${{ github.actor }}
        run: |
          python - << 'PY'
          import os, json
          from datetime import datetime, timezone
          from google.oauth2 import service_account
          from googleapiclient.discovery import build

          # creds
          info = json.loads(os.environ["GOOGLE_SERVICE_ACCOUNT_JSON"])
          creds = service_account.Credentials.from_service_account_info(
              info, scopes=["https://www.googleapis.com/auth/spreadsheets"]
          )
          svc = build("sheets", "v4", credentials=creds)

          # extract a short summary from ticket_output.txt
          first = ""
          try:
              with open("ticket_output.txt","r",encoding="utf-8",errors="ignore") as f:
                  for ln in f:
                      ln = ln.strip()
                      if ln:
                          first = ln
                          break
          except FileNotFoundError:
              pass

          now = datetime.now(timezone.utc).isoformat()
          row = [[now, os.environ.get("GITHUB_RUN_ID",""), os.environ.get("GITHUB_ACTOR",""), first]]

          svc.spreadsheets().values().append(
              spreadsheetId=os.environ["GSHEET_ID"],
              range="leocross!A1",
              valueInputOption="RAW",
              insertDataOption="INSERT_ROWS",
              body={"values": row}
          ).execute()
          print("append: ok")
          PY

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: leocross-artifacts-${{ github.run_id }}
          path: |
            resp.json
            ticket_output.txt

      - name: Summary
        run: |
          {
            echo "### LeoCross ticket"
            echo
            echo '**Script:** ${{ steps.findscript.outputs.script }}'
            echo
            echo '```text'
            sed -n '1,200p' ticket_output.txt || true
            echo '```'
          } >> "$GITHUB_STEP_SUMMARY"
