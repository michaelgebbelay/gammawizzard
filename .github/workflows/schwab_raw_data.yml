name: schwab raw data

on:
  workflow_dispatch:
    inputs:
      backfill_ytd:
        description: "Do one-time YTD backfill?"
        type: boolean
        default: true
      days_back:
        description: "Days of history for incremental (ignored if backfill)"
        required: false
        default: "4"
  # Nightly at ~8:05pm ET (handles DST with two crons)
  schedule:
    - cron: "5 0 * * *"  # 20:05 ET while DST (UTC-4)
    - cron: "5 1 * * *"  # 20:05 ET while Standard (UTC-5)

concurrency:
  group: schwab-sheets
  cancel-in-progress: true

jobs:
  dump:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: requirements.txt

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Compute dump params
        id: dump_params
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.backfill_ytd }}" == "true" ]]; then
            echo "BACKFILL_YTD=1" >> "$GITHUB_OUTPUT"
          else
            echo "BACKFILL_YTD=0" >> "$GITHUB_OUTPUT"
          fi
          DB="${{ github.event.inputs.days_back }}"
          if [[ -z "$DB" ]]; then DB=4; fi
          echo "DAYS_BACK=$DB" >> "$GITHUB_OUTPUT"

      - name: Dump Schwab → sw_txn_raw (YTD or incremental)
        env:
          GSHEET_ID: ${{ secrets.GSHEET_ID }}
          GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
          SCHWAB_APP_KEY: ${{ secrets.SCHWAB_APP_KEY }}
          SCHWAB_APP_SECRET: ${{ secrets.SCHWAB_APP_SECRET }}
          SCHWAB_TOKEN_JSON: ${{ secrets.SCHWAB_TOKEN_JSON }}
          BACKFILL_YTD: ${{ steps.dump_params.outputs.BACKFILL_YTD }}
          DAYS_BACK:    ${{ steps.dump_params.outputs.DAYS_BACK }}
        run: |
          python scripts/data/sw_dump_raw.py

      - name: Ingest Leo → sw_leo_orders (NBBO mid, 5-wide)
        if: always()
        env:
          GSHEET_ID: ${{ secrets.GSHEET_ID }}
          GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
          SCHWAB_APP_KEY: ${{ secrets.SCHWAB_APP_KEY }}
          SCHWAB_APP_SECRET: ${{ secrets.SCHWAB_APP_SECRET }}
          SCHWAB_TOKEN_JSON: ${{ secrets.SCHWAB_TOKEN_JSON }}
          GW_EMAIL: ${{ secrets.GW_EMAIL }}
          GW_PASSWORD: ${{ secrets.GW_PASSWORD }}
        run: |
          python scripts/data/gw_leo_to_sheet.py

      - name: SPX settlements from GammaWizard (fallback Schwab)
        if: always()
        env:
          GSHEET_ID: ${{ secrets.GSHEET_ID }}
          GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
          GW_TOKEN: ${{ secrets.GW_TOKEN }}
          GW_EMAIL: ${{ secrets.GW_EMAIL }}
          GW_PASSWORD: ${{ secrets.GW_PASSWORD }}
          GW_SETTLE_ENDPOINT: ${{ secrets.GW_SETTLE_ENDPOINT }}
          SCHWAB_APP_KEY: ${{ secrets.SCHWAB_APP_KEY }}
          SCHWAB_APP_SECRET: ${{ secrets.SCHWAB_APP_SECRET }}
          SCHWAB_TOKEN_JSON: ${{ secrets.SCHWAB_TOKEN_JSON }}
          SETTLE_BACKFILL_DAYS: "180"
        run: |
          python scripts/data/gw_settlements_to_sheet.py

      - name: 3-way expiry summary (Std+Adj from raw; full P&L with settle)
        if: always()
        env:
          GSHEET_ID: ${{ secrets.GSHEET_ID }}
          GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
          UNIT_RISK: "4500"
          ORIG_ET_START: "16:00"
          ORIG_ET_END: "16:20"
          ORIG_DAYS_BEFORE: "1"
          ALLOCATE_MULTI_EXP: "1"
        run: |
          python scripts/data/sw_3way_summary.py
