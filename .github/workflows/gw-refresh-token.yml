name: GW Refresh Token

on:
  schedule:
    - cron: "0 12 * * 1"   # Mondays 12:00 UTC
  workflow_dispatch:

permissions:
  contents: read

jobs:
  refresh:
    runs-on: ubuntu-latest
    steps:
      - name: Get JWT from GammaWizard
        id: gw
        env:
          GW_EMAIL: ${{ secrets.GW_EMAIL }}
          GW_PASSWORD: ${{ secrets.GW_PASSWORD }}
        run: |
          set -euo pipefail
          TOKEN="$(curl -sS -X POST 'https://gandalf.gammawizard.com/goauth/authenticateFireUser' \
                    -d "email=${GW_EMAIL}" -d "password=${GW_PASSWORD}" | \
                   python -c 'import sys,json; print(json.load(sys.stdin)["token"])')"
          echo "token=${TOKEN}" >> "$GITHUB_OUTPUT"

      - name: Update GW_TOKEN secret
        uses: actions/github-script@v7
        env:
          NEW_TOKEN: ${{ steps.gw.outputs.token }}
        with:
          github-token: ${{ secrets.GH_PAT_FOR_SECRETS }}
          script: |
            const sodium = require('tweetsodium');
            const owner = context.repo.owner;
            const repo  = context.repo.repo;

            // Fetch repo public key for secrets
            const { data: pub } = await github.request('GET /repos/{owner}/{repo}/actions/secrets/public-key', { owner, repo });
            const key = pub.key;
            const key_id = pub.key_id;

            // Encrypt the new token
            const messageBytes = Buffer.from(process.env.NEW_TOKEN);
            const keyBytes = Buffer.from(key, 'base64');
            const encryptedBytes = sodium.seal(messageBytes, keyBytes);
            const encrypted_value = Buffer.from(encryptedBytes).toString('base64');

            // Put the secret
            await github.request('PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}', {
              owner, repo,
              secret_name: 'GW_TOKEN',
              encrypted_value,
              key_id
            });
            core.info('GW_TOKEN secret updated.')
