# yamllint disable rule:line-length rule:truthy
---
name: Schwab Place

on:
  # Manual run (for tests)
  workflow_dispatch:

  # Auto-run right after LeoCross finishes
  workflow_run:
    workflows: ["LeoCross Ticket"]
    types: [completed]

concurrency:
  group: schwab-place
  cancel-in-progress: true

jobs:
  place:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      #---- Time gate. Pass ONLY at 16:12 ET or 13:12 PT on weekdays.
      #     Set repo var BYPASS_TIME_GATE=1 to skip this gate (for tests).
      - name: Gate to 16:12 ET / 13:12 PT (Mon–Fri)
        id: gate
        shell: bash
        env:
          BYPASS_TIME_GATE: ${{ vars.BYPASS_TIME_GATE }}
        run: |
          set -e
          if [ "${BYPASS_TIME_GATE:-}" = "1" ]; then
            echo "BYPASS_TIME_GATE=1 → proceed regardless of clock."
            echo "ok=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          ET_TIME="$(TZ=America/New_York date +%H:%M)"
          PT_TIME="$(TZ=America/Los_Angeles date +%H:%M)"
          DOW="$(TZ=America/New_York date +%u)"
          echo "Now ET=${ET_TIME}, PT=${PT_TIME}, DOW=${DOW}"
          if { [ "$ET_TIME" = "16:12" ] || [ "$PT_TIME" = "13:12" ]; } && [ "$DOW" -ge 1 ] && [ "$DOW" -le 5 ]; then
            echo "ok=true" >> "$GITHUB_OUTPUT"
          else
            echo "ok=false" >> "$GITHUB_OUTPUT"
          fi

      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install --quiet schwab-py google-api-python-client google-auth google-auth-httplib2

      #---- PLACE (only if time gate passed)
      - name: Place SPXW order from leocross!A2 and log at schwab!A2
        if: ${{ steps.gate.outputs.ok == 'true' }}
        env:
          # REQUIRED SECRETS
          SCHWAB_APP_KEY: ${{ secrets.SCHWAB_APP_KEY }}
          SCHWAB_APP_SECRET: ${{ secrets.SCHWAB_APP_SECRET }}
          SCHWAB_TOKEN_JSON: ${{ secrets.SCHWAB_TOKEN_JSON }}
          GSHEET_ID: ${{ secrets.GSHEET_ID }}
          GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}

          # ARM THE PLACER
          SCHWAB_PLACE: ${{ vars.SCHWAB_PLACE }}   # must be "place" to actually place

          # PRICING RAILS (per-leg; condor uses 2x these automatically)
          CREDIT_START_PERLEG:  ${{ vars.CREDIT_START_PERLEG }}   # e.g. 1.10
          CREDIT_FLOOR_PERLEG:  ${{ vars.CREDIT_FLOOR_PERLEG }}   # e.g. 0.95
          DEBIT_START_PERLEG:   ${{ vars.DEBIT_START_PERLEG }}    # e.g. 0.90
          DEBIT_CEIL_PERLEG:    ${{ vars.DEBIT_CEIL_PERLEG }}     # e.g. 1.05
          OFFSET_PERLEG_CREDIT: ${{ vars.OFFSET_PERLEG_CREDIT }}  # e.g. -0.05 (mid-)
          OFFSET_PERLEG_DEBIT:  ${{ vars.OFFSET_PERLEG_DEBIT }}   # e.g. +0.05 (mid+)

          # LADDER TIMING & TICK
          STAGE_SEC: ${{ vars.STAGE_SEC }}          # one knob, e.g. 15
          TICK:      ${{ vars.TICK }}               # 0.05 for SPX

          # SIZING (percent-of-BP at rails) — set SIZE_MODE=PCT_BP to enable
          SIZE_MODE:         ${{ vars.SIZE_MODE }}         # STATIC or PCT_BP
          CREDIT_ALLOC_PCT:  ${{ vars.CREDIT_ALLOC_PCT }}  # e.g. 0.06
          DEBIT_ALLOC_PCT:   ${{ vars.DEBIT_ALLOC_PCT }}   # e.g. 0.02
          MAX_QTY:           ${{ vars.MAX_QTY }}           # optional cap
          OPT_BP_OVERRIDE:   ${{ vars.OPT_BP_OVERRIDE }}   # e.g. 20000 for tests

          # FRESHNESS & EXPIRY GUARDS
          FRESH_MIN:                ${{ vars.FRESH_MIN }}                # e.g. 120
          ENFORCE_EXPIRY_TOMORROW:  ${{ vars.ENFORCE_EXPIRY_TOMORROW }}  # "true"/"false"

          # NEW POSITION GUARDS (defaults ON if vars empty)
          SKIP_IF_OPEN_SPX:  ${{ vars.SKIP_IF_OPEN_SPX }}  # "true" to skip if any SPX pos open
          POS_SCOPE:         ${{ vars.POS_SCOPE }}         # EXPIRY or ANY
          ENFORCE_NO_CLOSE:  ${{ vars.ENFORCE_NO_CLOSE }}  # "true" to block legs that would close

        run: |
          python scripts/schwab_place_order.py

      #---- If the gate did NOT match, say so plainly
      - name: Skipped (outside 16:12 ET / 13:12 PT)
        if: ${{ steps.gate.outputs.ok != 'true' }}
        run: echo "Time gate did not match; no order placed."
