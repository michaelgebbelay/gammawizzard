# .github/workflows/schwab-place.yml
# yamllint disable rule:line-length rule:truthy
name: Schwab Place

on:
  workflow_dispatch:
  # Auto-run right after LeoCross finishes
  workflow_run:
    workflows: ["LeoCross Ticket"]
    types: [completed]

concurrency:
  group: schwab-place
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  place:
    # Only run if upstream concluded success OR manual dispatch
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    timeout-minutes: 8

    steps:
      # Time gate: pass only near 16:12 ET (±8 min) on Mon–Fri. Bypass with BYPASS_TIME_GATE=1
      - name: Gate to ~16:12 ET (±8 min) Mon–Fri
        id: gate
        shell: bash
        env:
          BYPASS_TIME_GATE: ${{ vars.BYPASS_TIME_GATE }}
        run: |
          if [ "${BYPASS_TIME_GATE:-}" = "1" ]; then
            echo "ok=true" >> "$GITHUB_OUTPUT"
            echo "Bypass enabled → proceeding regardless of time."
            exit 0
          fi
          ET_HHMM="$(TZ=America/New_York date +%H:%M)"
          ET_DOW="$(TZ=America/New_York date +%u)"
          HH="${ET_HHMM%:*}"; MM="${ET_HHMM#*:}"
          NOW_MIN=$((10#$HH * 60 + 10#$MM))
          TARGET_MIN=$((16 * 60 + 12))
          DIFF=$(( NOW_MIN - TARGET_MIN ))
          [ $DIFF -lt 0 ] && DIFF=$(( -DIFF ))
          echo "Now ET=${ET_HHMM} (DOW=${ET_DOW}) | diff=${DIFF} min"
          if [ "$ET_DOW" -ge 1 ] && [ "$ET_DOW" -le 5 ] && [ "$DIFF" -le 8 ]; then
            echo "ok=true" >> "$GITHUB_OUTPUT"
          else
            echo "ok=false" >> "$GITHUB_OUTPUT"
          fi

      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install --quiet schwab-py google-api-python-client google-auth google-auth-httplib2

      # Safety hotfix in case any old copy still uses api_secret=
      - name: Hotfix (ensure app_secret kwarg)
        run: |
          sed -i 's/api_secret=/app_secret=/g' scripts/schwab_place_order.py || true

      - name: Place SPXW order from leocross!A2 and log at schwab!A2
        if: ${{ steps.gate.outputs.ok == 'true' }}
        env:
          # --- Required secrets ---
          SCHWAB_APP_KEY:    ${{ secrets.SCHWAB_APP_KEY }}
          SCHWAB_APP_SECRET: ${{ secrets.SCHWAB_APP_SECRET }}
          SCHWAB_TOKEN_JSON: ${{ secrets.SCHWAB_TOKEN_JSON }}
          GSHEET_ID:         ${{ secrets.GSHEET_ID }}
          GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}

          # --- Optional: choose account explicitly ---
          SCHWAB_ACCT_HASH: ${{ vars.SCHWAB_ACCT_HASH }}

          # --- Arm the placer (must be "place") ---
          SCHWAB_PLACE: ${{ vars.SCHWAB_PLACE || 'place' }}

          # --- Ladder timing & tick ---
          STAGE_SEC: ${{ vars.STAGE_SEC || 60 }}
          TICK: 0.05  # SPX options tick

          # --- Per-leg rails (CONDOR uses 2x automatically for pricing only) ---
          CREDIT_START_PERLEG:   ${{ vars.CREDIT_START_PERLEG || 1.10 }}
          CREDIT_FLOOR_PERLEG:   ${{ vars.CREDIT_FLOOR_PERLEG || 0.95 }}
          DEBIT_START_PERLEG:    ${{ vars.DEBIT_START_PERLEG  || 0.90 }}
          DEBIT_CEIL_PERLEG:     ${{ vars.DEBIT_CEIL_PERLEG   || 1.05 }}
          OFFSET_PERLEG_CREDIT:  ${{ vars.OFFSET_PERLEG_CREDIT || -0.05 }}
          OFFSET_PERLEG_DEBIT:   ${{ vars.OFFSET_PERLEG_DEBIT  ||  0.05 }}

          # --- Sizing (risk-per-contract) ---
          SIZE_MODE:        ${{ vars.SIZE_MODE || 'PCT_BP' }}   # 'STATIC' uses sheet qty; 'PCT_BP' uses budget
          CREDIT_ALLOC_PCT: ${{ vars.CREDIT_ALLOC_PCT || 0.06 }}
          DEBIT_ALLOC_PCT:  ${{ vars.DEBIT_ALLOC_PCT  || 0.02 }}
          RISK_PER_CONTRACT_CREDIT: ${{ vars.RISK_PER_CONTRACT_CREDIT || 300 }}
          RISK_PER_CONTRACT_DEBIT:  ${{ vars.RISK_PER_CONTRACT_DEBIT  || 200 }}
          MAX_RISK_PER_TRADE: ${{ vars.MAX_RISK_PER_TRADE || 1500 }}
          MAX_QTY:          ${{ vars.MAX_QTY || 6 }}
          MIN_QTY:          ${{ vars.MIN_QTY || 1 }}
          HARD_QTY_CUTOFF:  ${{ vars.HARD_QTY_CUTOFF || 10 }}
          BP_SOURCE:        ${{ vars.BP_SOURCE || 'OPTION' }}
          OPT_BP_OVERRIDE:  ${{ vars.OPT_BP_OVERRIDE || 0 }}

          # --- Guards ---
          FRESH_MIN:               ${{ vars.FRESH_MIN || 120 }}
          ENFORCE_EXPIRY_TOMORROW: ${{ vars.ENFORCE_EXPIRY_TOMORROW || 'true' }}
          MAX_LEG_SPREAD:          ${{ vars.MAX_LEG_SPREAD || 0.30 }}
          MAX_NET_SPREAD:          ${{ vars.MAX_NET_SPREAD || 0.30 }}
          CANCEL_IF_UNFILLED:      ${{ vars.CANCEL_IF_UNFILLED || 'true' }}
        run: |
          python scripts/schwab_place_order.py

      - name: Skipped (outside window)
        if: ${{ steps.gate.outputs.ok != 'true' }}
        run: echo "Time gate did not match; no order placed."
